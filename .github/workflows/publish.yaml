name: Release

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - v*
    branches:
      - release/*

jobs:
  release:
    runs-on: ubuntu-latest

    name: "publish"

    # Reference your environment variables
    environment: cargo

    steps:
      - uses: actions/checkout@master

      # Use caching to speed up your build
      - name: Cache publish-action bin
        id: cache-publish-action
        uses: actions/cache@v3
        env:
          cache-name: cache-publish-action
        with:
          path: ~/.cargo
          key: ${{ runner.os }}-build-${{ env.cache-name }}

      - name: SET CURRENT_VERSION tag
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          branchName=$(echo $GITHUB_REF | sed 's/refs\/tags\///')
          echo "CURRENT_VERSION=$(echo $branchName)" >> $GITHUB_ENV

      - name: SET CURRENT_VERSION branch
        if: startsWith(github.ref, 'refs/heads/')
        run: |
          branchName=$(echo $GITHUB_REF  | sed 's/refs\/heads\/release\///')
          echo "CURRENT_VERSION=$(echo $branchName)" >> $GITHUB_ENV

      - name: Update local toolchain
        run: |
          rustup update
          rustup component add clippy
          rustup install stable

      - name: Install cargo-deb
        if: steps.cache-publish-action.outputs.cache-hit != 'true'
        run: cargo install cargo-deb

      - name: Run cargo publish libprotonup
        env:
          # This can help you tagging the github repository
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # This can help you publish to crates.io
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        run: |
          # retrieve available versions in crates.io api to skip upload if it was published already
          published_versions=$( curl 'https://crates.io/api/v1/crates/libprotonup' -H 'Accept: */*' |  jq '.versions[].num' )
          exists=false
          if [[ ${published_versions[@]} =~ $(echo $CURRENT_VERSION | sed 's/v//' )  ]]
          then
            exists=true
          fi
          if ! ( $exists ) ; then
            cargo publish -p libprotonup
          fi

      - name: Run cargo build
        run: cargo build --release

      - name: Run cargo-deb to build a debian package
        run: cargo-deb -p protonup-rs --deb-version $CURRENT_VERSION

      - name: Upload deb package to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/debian/protonup-rs_${{ env.CURRENT_VERSION }}_amd64.deb
          asset_name: protonup-rs_${{ env.CURRENT_VERSION }}-1_amd64.deb
          tag: ${{ env.CURRENT_VERSION }}
          overwrite: true
          draft: true

      - name: Compress binary release artefacts
        run: |
          cd ./target/release
          zip protonup-rs-linux-amd64.zip protonup-rs
          tar -czvf protonup-rs-linux-amd64.tar.gz protonup-rs

      - name: Upload Tar gzed binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/release/protonup-rs-linux-amd64.tar.gz
          asset_name: protonup-rs-linux-amd64.tar.gz
          tag: ${{ env.CURRENT_VERSION }}
          overwrite: true
          draft: true

      - name: Upload Ziped binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/release/protonup-rs-linux-amd64.zip
          asset_name: protonup-rs-linux-amd64.zip
          tag: ${{ env.CURRENT_VERSION }}
          overwrite: true
          draft: true

      - name: Run cargo publish binary
        env:
          # This can help you tagging the github repository
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # This can help you publish to crates.io
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        run: |
          # retrieve available versions in crates.io api to skip upload if it was published already
          published_versions=$( curl 'https://crates.io/api/v1/crates/Protonup-rs'  -H 'Accept: */*' |  jq '.versions[].num' )
          exists=false
          if [[ ${published_versions[@]} =~ $(echo $CURRENT_VERSION | sed 's/v//' )  ]]
          then
            exists=true
          fi
          if ! ( $exists ) ; then
            cargo publish -p protonup-rs
          fi


